<div id="editor_frame">
<div id="editor"># Create some instances on AWS

template = &lt;&lt;END
{
    "Config": {
    },
    "Resources": {
        "computeInstance1": {
            "type": "Std::ComputeInstance",
            "imageId": "ami-d0f89fb9",
            "instanceType": "t1.micro"
        },
        "computeInstance2": {
            "type": "Std::ComputeInstance",
            "imageId": "ami-d0f89fb9",
            "instanceType": "t1.micro"
        },
        "computeInstance3": {
            "type": "Std::ComputeInstance",
            "imageId": "ami-d0f89fb9",
            "instanceType": "t1.micro"
        }
    }
}
END

engine.consume(template)

def create()
    engine.create("computeInstance1")
    engine.create("computeInstance2")
    engine.create("computeInstance3")
end

def destroy()
    engine.destroy("computeInstance3")
    engine.destroy("computeInstance2")
    engine.destroy("computeInstance1")
end

def custom()
    engine.destroy("computeInstance3")
    engine.destroy("computeInstance2")
    engine.destroy("computeInstance1")
end

</div>
</div>
<!-- Forms
================================================== -->
<div id="control_panel_frame">
<div id="control_panel">

<div class="row">
  <div class="col-lg-6">
    <div class="well">
      <form class="form-horizontal">
        <fieldset>
          <div class="form-group">
            <div class="col-lg-4">
	           	<div class="btn-group">
	           		<a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#">
    					Lifecycle: <span id="lifecycle">Create</span>
    					<span class="caret"></span>
  					</a>
  					<ul id="invokeables" class="dropdown-menu">
    					<!-- dropdown menu links -->
    					<li><a class="change_lifecycle" href="#">Create</a></li>
    					<li><a class="change_lifecycle" href="#">Destroy</a></li>
  					</ul>
				</div>
            </div>

            <div class="col-lg-8">
	           	<div class="btn-group">
	           		<a class="btn btn-default dropdown-toggle invoke" href="#">
    					<i class="icon-play-circle icon-white"></i> Invoke
  					</a>
		          <a id="step" href="#" class="btn btn-default"><i class="icon-step-forward icon-white"></i> Step</a>
		          <a id="continue" href="#" class="btn btn-default"><i class="icon-play icon-white"></i> Continue</a>
		          <a id="drop" href="#" class="btn btn-default"><i class="icon-circle-arrow-down icon-white"></i> Drop Frame</a>
        	    </div>
            </div>
          </div>
          <div class="form-group">
            <label for="breakAtLine" class="col-lg-4 control-label">Break At:</label>
            <div class="col-lg-8">
              <input type="text" class="form-control input-sm" id="breakAtLine" placeholder="Line #">
            </div>
          </div>
        </fieldset>
      </form>
    </div>
  </div>
  <div class="col-lg-6">
        <form>
		<div class="form-group">
			<label for="textArea" class="col-lg-2 control-label">Output</label>
			<div class="col-lg-10">
				<div>
					<pre id="script_output" >
					</pre>
				</div>
			  <!-- textarea  class="form-control" rows="5" cols="40" id="textArea" disabled></textarea -->
			  <span class="help-block">Output from harp script run will appear above.</span>
			</div>
		</div>
      </form>
  </div>
</div>
</div>
</div><%# /control_panel_frame %>
<script src="/js/ace/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/vibrant_ink");
    editor.getSession().setMode("ace/mode/ruby");
    editor.on("guttermousedown", function(e){
    var target = e.domEvent.target;
      if (target.className.indexOf("ace_gutter-cell") == -1) {
          var row = e.getDocumentPosition().row;
          e.editor.session.clearBreakpoint(row);
          return;
      }
      if (!editor.isFocused()) {
          return;
      }
      if (e.clientX > 25 + target.getBoundingClientRect().left) {
          return;
      }
      var row = e.getDocumentPosition().row;
      if (target.className.indexOf("breakpoint") == -1) {
          e.editor.session.setBreakpoint(row, " breakpoint");
          e.stop();
      } else {
          e.editor.session.clearBreakpoint(row);
          return;
      }
	});
</script>
<script src="/js/annyang.min.js" type="text/javascript"></script>
<script>
if (annyang) {
  // Let's define a command.
  var commands = {
    'harp step': function() { $('#step').click(); }
  };

  // Initialize annyang with our commands
  annyang.init(commands);

}</script>
